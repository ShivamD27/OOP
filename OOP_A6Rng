#include <bits/stdc++.h>
using namespace std;
#define MAX 20

int pStatus[MAX],n,coordinator;
using namespace std;

void bully();
void ring();
void display();

int main(){
    int choice;
    cout<<"Enter number of processes: ";
    cin>>n;
    for(int i=1;i<=n;i++){

        cout<<"Enter process:"<<i<<" is alive(1/0): ";
        cin>>pStatus[i];
        if(pStatus[i]){
            coordinator=i;

        }
    }
    do{
        cout<<"-----------------------------"<<endl;
        cout<<"1. bully"<<endl;
        cout<<"2. ring"<<endl;
        cout<<"3. display"<<endl;
        cout<<"4. exit"<<endl;
        cout<<"Enter choice: "<<endl;
        cin>>choice;
        switch(choice){
            case 1:
            bully();
            break;

            case 2:
            ring();
            break;

            case 3:
            display();
            break;

            case 4:
            exit(1);
            break;
        }
    }while(choice!=3);
    return 0;

}

void display(){
    cout<<"------------------------"<<endl;
    cout<<"Processes:  ";
    for(int i=1;i<=n;i++){
        cout<<i<<"\t";
    }
    cout<<endl;
    cout<<"Alive:      ";
    for(int i=1;i<=n;i++){
        cout<<pStatus[i]<<"\t";
    }
    cout<<endl;
    cout<<"------------------------"<<endl;
    cout<<"Coordinator is: "<<coordinator<<endl;
}


void bully(){
    int bchoice,flag,crash,activate,gid,subor;
    do{
        cout<<"-------------------------------"<<endl;
        cout<<"1. crash"<<endl;
        cout<<"2. activate"<<endl;
        cout<<"3. display"<<endl;
        cout<<"4. exit"<<endl;
        cout<<"Enter choice "<<endl;
        cin>>bchoice;
        switch(bchoice){
            case 1:
                cout<<"Enter the id of process to crash: "<<endl;
                cin>>crash;
                if(pStatus[crash]==1){
                    pStatus[crash]=0;
                }
                else{
                    cout<<"ID already crashed..."<<endl;
                }
                do{
                    cout<<"Enter the Gid election starter: "<<endl;
                    cin>>gid;
                    if(gid==coordinator || pStatus[gid]==0){
                        cout<<"Enter valid gid."<<endl;
                    }
                }while(gid==coordinator || pStatus[gid]==0);

                flag=0;
                if(crash == coordinator){

                    for(int i=1+gid;i<=n;i++){
                        cout<<"Messgage sent from "<<gid<<" to "<<i<<endl;
                        if(pStatus[i]){
                            subor=i;
                            cout<<"Request achknoeledged by "<<i<<" to "<<gid<<endl;
                            flag=1;
                        }
                    }
                    if(flag){
                        coordinator=subor;
                    }
                    else{
                        coordinator=gid;
                    }
                }
                display();
                break;


            case 2:
                cout<<"Enter id to activated: "<<endl;
                cin>>activate;
                if(pStatus[activate]==0){
                    pStatus[activate]=1;
                }
                else{
                    cout<<"Already Alive..."<<endl;
                }

                if(activate==n){
                    coordinator=n;
                    break;
                }
                flag=0;
                for(int i=1+activate;i<=n;i++){
                        cout<<"Messgage sent from "<<activate<<" to "<<i<<endl;
                        if(pStatus[i]){
                            subor=i;
                            cout<<"Request achknoeledged by "<<i<<" to "<<activate<<endl;
                            flag=1;
                        }
                }
                if(flag){
                    coordinator=subor;
                }
                else{
                    coordinator=activate;
                }
                display();
                break;

            case 3:
                display();
                break;
            case 4:
                break;
        }
        
    }while(bchoice!=4);
}

void ring(){
    int gid,crash,activate,rchoice,subor;
    do{
        cout<<"---------------------------"<<endl;
        cout<<"1. crash"<<endl;
        cout<<"2. activate"<<endl;
        cout<<"3. display"<<endl;
        cout<<"4. exit"<<endl;        
        cout<<"enter choice: "<<endl;
        cin>>rchoice;
        switch(rchoice){
            case 1:
                cout<<"Enter id to crash: ";
                cin>>crash;
                if(pStatus[crash]==1){
                    pStatus[crash]=0;
                }
                else{
                    cout<<"Already dead"<<endl;
                }
                do{
                    cout<<"Enter gid election generator: ";
                    cin>>gid;
                    if(gid==coordinator){
                        cout<<"Enter valid gid "<<endl;
                    }
                }while(gid==coordinator);

                if(crash == coordinator){
                    subor=gid;
                    for(int i=0;i<(n+1);i++){
                        int pid = (i+gid)%(n+1);
                        if(pid!=0){
                            if(pStatus[pid] && pid>subor){
                                subor=pid;
                            }
                            cout<<"Election message send from "<<pid<<" to "<<subor<<endl;
                        }
                    }
                    coordinator=subor;
                }
                display();
                break;

            case 2:
                cout<<"Enter id to activated: "<<endl;
                cin>>activate;
                if(pStatus[activate]==0){
                    pStatus[activate]=1;                    
                }
                else{
                    cout<<"already alive..."<<endl;
                }

                subor=activate;

                for(int i=0;i<(n+1);i++){
                    int pid=(i+activate)%(n+1);
                    if(pid!=0){
                        if(pStatus[pid] && pid > subor){
                            subor=pid;
                        }
                        cout<<"Election message send from "<<pid<<" to "<<subor<<endl;
                    }
                }
                display();
                break;

            case 3:
                display();
                break;

            case 4:
                break;

        }
    }while(rchoice!=4);
}
