# MNT=[]
# KPDTAB=[]
# PNTAB=[]
# APTAB=[]
# LC=1


# def MNT_insert(lst):
#     f2=open('MNT.txt',mode='a')
#     #name  pp  kp  mntp  kpdtp
#     kp=0
#     pp=0
#     kplen=len(KPDTAB)

#     for i in range(1,len(lst)):
#         if '=' in lst[i]:
#             kp+=1
#             parameter=lst[i]
#             kpstring=""
#             defaultval=""
#             for i in range(0,len(parameter)-1):
#                 kpstring+=parameter[i]
#                 if parameter[i+1]=='=':
#                     i+=1
#                     defaultval=parameter[(i+1):]
#                     break


#             PNTAB.append(kpstring)
#             KPDTAB.append([kpstring,defaultval])
#         else:
#             pp+=1
#             PNTAB.append(lst[i])
        
#     if kplen!=0 and LC!=1:
#         MNT.append([{lst[0]},pp,kp,LC,kplen])
#     else:
#         MNT.append([{lst[0]},pp,kp,LC,0])

# def PNTAB_search(operand):
#     for i in range(0,len(PNTAB)):
#         if operand == PNTAB[i]:
#             return i
#     return -1

# def MDT_insert(lst):
#     global LC
#     f6=open('MDT.txt',mode='a')

#     # print("this ",PNTAB)
#     for i in range(0,len(lst)):
#         index1=PNTAB_search(lst[i])
#         if index1!=-1:
#             f6.write(f"(P,{index1}) ")
#         else:
#             f6.write(f"{lst[i]} ")
#     f6.write("\n")
#     f6.close()
#     LC+=1





# f=open('text.txt',mode='r')
# while True:
#     line=f.readline()
#     if 'MACRO' in line:
#         line=f.readline()
#         lst=line.split()
#         MNT_insert(lst)
#         while "MEND" not in line:
#             line=f.readline()
#             lst=line.split()
#             MDT_insert(lst)
#         PNTAB.clear()
#     else:
#         f1=open('Intermediate_code.txt',mode='a')
#         f1.write(line)
#         f1.close()

#     if not line:
#         break
# f.close()



# print(MNT)
#print MNT:---------------------------------------
f2=open('MNT.txt',mode='a')
f2.write("#name    pp    kp    mdtp    kpdtp")
for i in range(0,len(MNT)):
    f2.write(f"\n{MNT[i][0]}    {MNT[i][1]}     {MNT[i][2]}    {MNT[i][3]}    {MNT[i][4]}")
f2.close()

